//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Der Quellcode wurde automatisch mit Microsoft.VSDesigner generiert. Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace eCardDialog.KSERef {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="kse_17Binding", Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class KseService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getErstkonsultationenOperationCompleted;
        
        private System.Threading.SendOrPostCallback aendernKonsultationOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteKonsultationsdatenAnfrageOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOfflineRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback doKonsultationOperationCompleted;
        
        private System.Threading.SendOrPostCallback doKonsultationOfflineOperationCompleted;
        
        private System.Threading.SendOrPostCallback downloadKonsultationsdatenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBehandlungsfaelleOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBehandlungsfaelleByFachgebietOperationCompleted;
        
        private System.Threading.SendOrPostCallback getBehandlungsfaelleByFachgebietZusatzOperationCompleted;
        
        private System.Threading.SendOrPostCallback getKonsultationsdatenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getKonsultationsdatenAnfragenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNumberOfflineKonsultationenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNumberOfflineNachsignaturenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOfflineRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback nachsignierenKonsultationenOperationCompleted;
        
        private System.Threading.SendOrPostCallback nachsignierenKonsultationenOfflineOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendKonsultationsdatenAnfrageOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendOfflineKonsultationOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendOfflineNachsignaturOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendZusatzinformationsAntwortOperationCompleted;
        
        private System.Threading.SendOrPostCallback stornierenKonsultationOperationCompleted;
        
        private System.Threading.SendOrPostCallback wiederinkraftsetzenKonsultationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public KseService() {
            this.Url = global::eCardDialog.Properties.Settings.Default.eCardDialog_KSERef_KseService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getErstkonsultationenCompletedEventHandler getErstkonsultationenCompleted;
        
        /// <remarks/>
        public event aendernKonsultationCompletedEventHandler aendernKonsultationCompleted;
        
        /// <remarks/>
        public event checkStatusCompletedEventHandler checkStatusCompleted;
        
        /// <remarks/>
        public event deleteKonsultationsdatenAnfrageCompletedEventHandler deleteKonsultationsdatenAnfrageCompleted;
        
        /// <remarks/>
        public event deleteOfflineRecordCompletedEventHandler deleteOfflineRecordCompleted;
        
        /// <remarks/>
        public event doKonsultationCompletedEventHandler doKonsultationCompleted;
        
        /// <remarks/>
        public event doKonsultationOfflineCompletedEventHandler doKonsultationOfflineCompleted;
        
        /// <remarks/>
        public event downloadKonsultationsdatenCompletedEventHandler downloadKonsultationsdatenCompleted;
        
        /// <remarks/>
        public event getBehandlungsfaelleCompletedEventHandler getBehandlungsfaelleCompleted;
        
        /// <remarks/>
        public event getBehandlungsfaelleByFachgebietCompletedEventHandler getBehandlungsfaelleByFachgebietCompleted;
        
        /// <remarks/>
        public event getBehandlungsfaelleByFachgebietZusatzCompletedEventHandler getBehandlungsfaelleByFachgebietZusatzCompleted;
        
        /// <remarks/>
        public event getKonsultationsdatenCompletedEventHandler getKonsultationsdatenCompleted;
        
        /// <remarks/>
        public event getKonsultationsdatenAnfragenCompletedEventHandler getKonsultationsdatenAnfragenCompleted;
        
        /// <remarks/>
        public event getLimitCompletedEventHandler getLimitCompleted;
        
        /// <remarks/>
        public event getNumberOfflineKonsultationenCompletedEventHandler getNumberOfflineKonsultationenCompleted;
        
        /// <remarks/>
        public event getNumberOfflineNachsignaturenCompletedEventHandler getNumberOfflineNachsignaturenCompleted;
        
        /// <remarks/>
        public event getOfflineRecordsCompletedEventHandler getOfflineRecordsCompleted;
        
        /// <remarks/>
        public event nachsignierenKonsultationenCompletedEventHandler nachsignierenKonsultationenCompleted;
        
        /// <remarks/>
        public event nachsignierenKonsultationenOfflineCompletedEventHandler nachsignierenKonsultationenOfflineCompleted;
        
        /// <remarks/>
        public event sendKonsultationsdatenAnfrageCompletedEventHandler sendKonsultationsdatenAnfrageCompleted;
        
        /// <remarks/>
        public event sendOfflineKonsultationCompletedEventHandler sendOfflineKonsultationCompleted;
        
        /// <remarks/>
        public event sendOfflineNachsignaturCompletedEventHandler sendOfflineNachsignaturCompleted;
        
        /// <remarks/>
        public event sendZusatzinformationsAntwortCompletedEventHandler sendZusatzinformationsAntwortCompleted;
        
        /// <remarks/>
        public event stornierenKonsultationCompletedEventHandler stornierenKonsultationCompleted;
        
        /// <remarks/>
        public event wiederinkraftsetzenKonsultationCompletedEventHandler wiederinkraftsetzenKonsultationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public erstkonsultationsdaten[] getErstkonsultationen(string dialogId, string svNummer, string fachgebietsCode, bool nacherfassung, [System.Xml.Serialization.XmlIgnoreAttribute()] bool nacherfassungSpecified) {
            object[] results = this.Invoke("getErstkonsultationen", new object[] {
                        dialogId,
                        svNummer,
                        fachgebietsCode,
                        nacherfassung,
                        nacherfassungSpecified});
            return ((erstkonsultationsdaten[])(results[0]));
        }
        
        /// <remarks/>
        public void getErstkonsultationenAsync(string dialogId, string svNummer, string fachgebietsCode, bool nacherfassung, bool nacherfassungSpecified) {
            this.getErstkonsultationenAsync(dialogId, svNummer, fachgebietsCode, nacherfassung, nacherfassungSpecified, null);
        }
        
        /// <remarks/>
        public void getErstkonsultationenAsync(string dialogId, string svNummer, string fachgebietsCode, bool nacherfassung, bool nacherfassungSpecified, object userState) {
            if ((this.getErstkonsultationenOperationCompleted == null)) {
                this.getErstkonsultationenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetErstkonsultationenOperationCompleted);
            }
            this.InvokeAsync("getErstkonsultationen", new object[] {
                        dialogId,
                        svNummer,
                        fachgebietsCode,
                        nacherfassung,
                        nacherfassungSpecified}, this.getErstkonsultationenOperationCompleted, userState);
        }
        
        private void OngetErstkonsultationenOperationCompleted(object arg) {
            if ((this.getErstkonsultationenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getErstkonsultationenCompleted(this, new getErstkonsultationenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public konsultationsBeleg aendernKonsultation(string dialogId, long konsId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool konsIdSpecified, int konsVersion, [System.Xml.Serialization.XmlIgnoreAttribute()] bool konsVersionSpecified, string behandlungsfallCode) {
            object[] results = this.Invoke("aendernKonsultation", new object[] {
                        dialogId,
                        konsId,
                        konsIdSpecified,
                        konsVersion,
                        konsVersionSpecified,
                        behandlungsfallCode});
            return ((konsultationsBeleg)(results[0]));
        }
        
        /// <remarks/>
        public void aendernKonsultationAsync(string dialogId, long konsId, bool konsIdSpecified, int konsVersion, bool konsVersionSpecified, string behandlungsfallCode) {
            this.aendernKonsultationAsync(dialogId, konsId, konsIdSpecified, konsVersion, konsVersionSpecified, behandlungsfallCode, null);
        }
        
        /// <remarks/>
        public void aendernKonsultationAsync(string dialogId, long konsId, bool konsIdSpecified, int konsVersion, bool konsVersionSpecified, string behandlungsfallCode, object userState) {
            if ((this.aendernKonsultationOperationCompleted == null)) {
                this.aendernKonsultationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaendernKonsultationOperationCompleted);
            }
            this.InvokeAsync("aendernKonsultation", new object[] {
                        dialogId,
                        konsId,
                        konsIdSpecified,
                        konsVersion,
                        konsVersionSpecified,
                        behandlungsfallCode}, this.aendernKonsultationOperationCompleted, userState);
        }
        
        private void OnaendernKonsultationOperationCompleted(object arg) {
            if ((this.aendernKonsultationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.aendernKonsultationCompleted(this, new aendernKonsultationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public property[] checkStatus(string dialogId) {
            object[] results = this.Invoke("checkStatus", new object[] {
                        dialogId});
            return ((property[])(results[0]));
        }
        
        /// <remarks/>
        public void checkStatusAsync(string dialogId) {
            this.checkStatusAsync(dialogId, null);
        }
        
        /// <remarks/>
        public void checkStatusAsync(string dialogId, object userState) {
            if ((this.checkStatusOperationCompleted == null)) {
                this.checkStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckStatusOperationCompleted);
            }
            this.InvokeAsync("checkStatus", new object[] {
                        dialogId}, this.checkStatusOperationCompleted, userState);
        }
        
        private void OncheckStatusOperationCompleted(object arg) {
            if ((this.checkStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkStatusCompleted(this, new checkStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteKonsultationsdatenAnfrage(string dialogId, string anfrageId) {
            this.Invoke("deleteKonsultationsdatenAnfrage", new object[] {
                        dialogId,
                        anfrageId});
        }
        
        /// <remarks/>
        public void deleteKonsultationsdatenAnfrageAsync(string dialogId, string anfrageId) {
            this.deleteKonsultationsdatenAnfrageAsync(dialogId, anfrageId, null);
        }
        
        /// <remarks/>
        public void deleteKonsultationsdatenAnfrageAsync(string dialogId, string anfrageId, object userState) {
            if ((this.deleteKonsultationsdatenAnfrageOperationCompleted == null)) {
                this.deleteKonsultationsdatenAnfrageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteKonsultationsdatenAnfrageOperationCompleted);
            }
            this.InvokeAsync("deleteKonsultationsdatenAnfrage", new object[] {
                        dialogId,
                        anfrageId}, this.deleteKonsultationsdatenAnfrageOperationCompleted, userState);
        }
        
        private void OndeleteKonsultationsdatenAnfrageOperationCompleted(object arg) {
            if ((this.deleteKonsultationsdatenAnfrageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteKonsultationsdatenAnfrageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteOfflineRecord(string dialogId, string offlineId) {
            this.Invoke("deleteOfflineRecord", new object[] {
                        dialogId,
                        offlineId});
        }
        
        /// <remarks/>
        public void deleteOfflineRecordAsync(string dialogId, string offlineId) {
            this.deleteOfflineRecordAsync(dialogId, offlineId, null);
        }
        
        /// <remarks/>
        public void deleteOfflineRecordAsync(string dialogId, string offlineId, object userState) {
            if ((this.deleteOfflineRecordOperationCompleted == null)) {
                this.deleteOfflineRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOfflineRecordOperationCompleted);
            }
            this.InvokeAsync("deleteOfflineRecord", new object[] {
                        dialogId,
                        offlineId}, this.deleteOfflineRecordOperationCompleted, userState);
        }
        
        private void OndeleteOfflineRecordOperationCompleted(object arg) {
            if ((this.deleteOfflineRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteOfflineRecordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public ergebnisKonsultation doKonsultation(string cin, string dialogId, string svNummer, string svtCode, string anspruchId, string fachgebietsCode, string behandlungsfallCode, string nacherfassungsgrundCode, string behandlungsdatum, bool forceExecution, [System.Xml.Serialization.XmlIgnoreAttribute()] bool forceExecutionSpecified, string cardReaderId) {
            object[] results = this.Invoke("doKonsultation", new object[] {
                        cin,
                        dialogId,
                        svNummer,
                        svtCode,
                        anspruchId,
                        fachgebietsCode,
                        behandlungsfallCode,
                        nacherfassungsgrundCode,
                        behandlungsdatum,
                        forceExecution,
                        forceExecutionSpecified,
                        cardReaderId});
            return ((ergebnisKonsultation)(results[0]));
        }
        
        /// <remarks/>
        public void doKonsultationAsync(string cin, string dialogId, string svNummer, string svtCode, string anspruchId, string fachgebietsCode, string behandlungsfallCode, string nacherfassungsgrundCode, string behandlungsdatum, bool forceExecution, bool forceExecutionSpecified, string cardReaderId) {
            this.doKonsultationAsync(cin, dialogId, svNummer, svtCode, anspruchId, fachgebietsCode, behandlungsfallCode, nacherfassungsgrundCode, behandlungsdatum, forceExecution, forceExecutionSpecified, cardReaderId, null);
        }
        
        /// <remarks/>
        public void doKonsultationAsync(string cin, string dialogId, string svNummer, string svtCode, string anspruchId, string fachgebietsCode, string behandlungsfallCode, string nacherfassungsgrundCode, string behandlungsdatum, bool forceExecution, bool forceExecutionSpecified, string cardReaderId, object userState) {
            if ((this.doKonsultationOperationCompleted == null)) {
                this.doKonsultationOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoKonsultationOperationCompleted);
            }
            this.InvokeAsync("doKonsultation", new object[] {
                        cin,
                        dialogId,
                        svNummer,
                        svtCode,
                        anspruchId,
                        fachgebietsCode,
                        behandlungsfallCode,
                        nacherfassungsgrundCode,
                        behandlungsdatum,
                        forceExecution,
                        forceExecutionSpecified,
                        cardReaderId}, this.doKonsultationOperationCompleted, userState);
        }
        
        private void OndoKonsultationOperationCompleted(object arg) {
            if ((this.doKonsultationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doKonsultationCompleted(this, new doKonsultationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public offlineRecord doKonsultationOffline(string cin, string dialogId, string svNummer, string svtCode, string fachgebietsCode, string behandlungsfallCode, string nacherfassungsgrundCode, string behandlungsdatum, bool forceExecution, [System.Xml.Serialization.XmlIgnoreAttribute()] bool forceExecutionSpecified, string cardReaderId) {
            object[] results = this.Invoke("doKonsultationOffline", new object[] {
                        cin,
                        dialogId,
                        svNummer,
                        svtCode,
                        fachgebietsCode,
                        behandlungsfallCode,
                        nacherfassungsgrundCode,
                        behandlungsdatum,
                        forceExecution,
                        forceExecutionSpecified,
                        cardReaderId});
            return ((offlineRecord)(results[0]));
        }
        
        /// <remarks/>
        public void doKonsultationOfflineAsync(string cin, string dialogId, string svNummer, string svtCode, string fachgebietsCode, string behandlungsfallCode, string nacherfassungsgrundCode, string behandlungsdatum, bool forceExecution, bool forceExecutionSpecified, string cardReaderId) {
            this.doKonsultationOfflineAsync(cin, dialogId, svNummer, svtCode, fachgebietsCode, behandlungsfallCode, nacherfassungsgrundCode, behandlungsdatum, forceExecution, forceExecutionSpecified, cardReaderId, null);
        }
        
        /// <remarks/>
        public void doKonsultationOfflineAsync(string cin, string dialogId, string svNummer, string svtCode, string fachgebietsCode, string behandlungsfallCode, string nacherfassungsgrundCode, string behandlungsdatum, bool forceExecution, bool forceExecutionSpecified, string cardReaderId, object userState) {
            if ((this.doKonsultationOfflineOperationCompleted == null)) {
                this.doKonsultationOfflineOperationCompleted = new System.Threading.SendOrPostCallback(this.OndoKonsultationOfflineOperationCompleted);
            }
            this.InvokeAsync("doKonsultationOffline", new object[] {
                        cin,
                        dialogId,
                        svNummer,
                        svtCode,
                        fachgebietsCode,
                        behandlungsfallCode,
                        nacherfassungsgrundCode,
                        behandlungsdatum,
                        forceExecution,
                        forceExecutionSpecified,
                        cardReaderId}, this.doKonsultationOfflineOperationCompleted, userState);
        }
        
        private void OndoKonsultationOfflineOperationCompleted(object arg) {
            if ((this.doKonsultationOfflineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.doKonsultationOfflineCompleted(this, new doKonsultationOfflineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public konsultationsdaten[] downloadKonsultationsdaten(string dialogId, string anfrageId) {
            object[] results = this.Invoke("downloadKonsultationsdaten", new object[] {
                        dialogId,
                        anfrageId});
            return ((konsultationsdaten[])(results[0]));
        }
        
        /// <remarks/>
        public void downloadKonsultationsdatenAsync(string dialogId, string anfrageId) {
            this.downloadKonsultationsdatenAsync(dialogId, anfrageId, null);
        }
        
        /// <remarks/>
        public void downloadKonsultationsdatenAsync(string dialogId, string anfrageId, object userState) {
            if ((this.downloadKonsultationsdatenOperationCompleted == null)) {
                this.downloadKonsultationsdatenOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownloadKonsultationsdatenOperationCompleted);
            }
            this.InvokeAsync("downloadKonsultationsdaten", new object[] {
                        dialogId,
                        anfrageId}, this.downloadKonsultationsdatenOperationCompleted, userState);
        }
        
        private void OndownloadKonsultationsdatenOperationCompleted(object arg) {
            if ((this.downloadKonsultationsdatenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.downloadKonsultationsdatenCompleted(this, new downloadKonsultationsdatenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public baseProperty[] getBehandlungsfaelle() {
            object[] results = this.Invoke("getBehandlungsfaelle", new object[0]);
            return ((baseProperty[])(results[0]));
        }
        
        /// <remarks/>
        public void getBehandlungsfaelleAsync() {
            this.getBehandlungsfaelleAsync(null);
        }
        
        /// <remarks/>
        public void getBehandlungsfaelleAsync(object userState) {
            if ((this.getBehandlungsfaelleOperationCompleted == null)) {
                this.getBehandlungsfaelleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBehandlungsfaelleOperationCompleted);
            }
            this.InvokeAsync("getBehandlungsfaelle", new object[0], this.getBehandlungsfaelleOperationCompleted, userState);
        }
        
        private void OngetBehandlungsfaelleOperationCompleted(object arg) {
            if ((this.getBehandlungsfaelleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBehandlungsfaelleCompleted(this, new getBehandlungsfaelleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public baseProperty[] getBehandlungsfaelleByFachgebiet(string fachgebietCode) {
            object[] results = this.Invoke("getBehandlungsfaelleByFachgebiet", new object[] {
                        fachgebietCode});
            return ((baseProperty[])(results[0]));
        }
        
        /// <remarks/>
        public void getBehandlungsfaelleByFachgebietAsync(string fachgebietCode) {
            this.getBehandlungsfaelleByFachgebietAsync(fachgebietCode, null);
        }
        
        /// <remarks/>
        public void getBehandlungsfaelleByFachgebietAsync(string fachgebietCode, object userState) {
            if ((this.getBehandlungsfaelleByFachgebietOperationCompleted == null)) {
                this.getBehandlungsfaelleByFachgebietOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBehandlungsfaelleByFachgebietOperationCompleted);
            }
            this.InvokeAsync("getBehandlungsfaelleByFachgebiet", new object[] {
                        fachgebietCode}, this.getBehandlungsfaelleByFachgebietOperationCompleted, userState);
        }
        
        private void OngetBehandlungsfaelleByFachgebietOperationCompleted(object arg) {
            if ((this.getBehandlungsfaelleByFachgebietCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBehandlungsfaelleByFachgebietCompleted(this, new getBehandlungsfaelleByFachgebietCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public behandlungsfallZusatzProperty[] getBehandlungsfaelleByFachgebietZusatz(string fachgebietCode) {
            object[] results = this.Invoke("getBehandlungsfaelleByFachgebietZusatz", new object[] {
                        fachgebietCode});
            return ((behandlungsfallZusatzProperty[])(results[0]));
        }
        
        /// <remarks/>
        public void getBehandlungsfaelleByFachgebietZusatzAsync(string fachgebietCode) {
            this.getBehandlungsfaelleByFachgebietZusatzAsync(fachgebietCode, null);
        }
        
        /// <remarks/>
        public void getBehandlungsfaelleByFachgebietZusatzAsync(string fachgebietCode, object userState) {
            if ((this.getBehandlungsfaelleByFachgebietZusatzOperationCompleted == null)) {
                this.getBehandlungsfaelleByFachgebietZusatzOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetBehandlungsfaelleByFachgebietZusatzOperationCompleted);
            }
            this.InvokeAsync("getBehandlungsfaelleByFachgebietZusatz", new object[] {
                        fachgebietCode}, this.getBehandlungsfaelleByFachgebietZusatzOperationCompleted, userState);
        }
        
        private void OngetBehandlungsfaelleByFachgebietZusatzOperationCompleted(object arg) {
            if ((this.getBehandlungsfaelleByFachgebietZusatzCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getBehandlungsfaelleByFachgebietZusatzCompleted(this, new getBehandlungsfaelleByFachgebietZusatzCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public konsultationsdaten[] getKonsultationsdaten(string dialogId, suchFilter selektionsKriterien, string selektionsart, string sortierung) {
            object[] results = this.Invoke("getKonsultationsdaten", new object[] {
                        dialogId,
                        selektionsKriterien,
                        selektionsart,
                        sortierung});
            return ((konsultationsdaten[])(results[0]));
        }
        
        /// <remarks/>
        public void getKonsultationsdatenAsync(string dialogId, suchFilter selektionsKriterien, string selektionsart, string sortierung) {
            this.getKonsultationsdatenAsync(dialogId, selektionsKriterien, selektionsart, sortierung, null);
        }
        
        /// <remarks/>
        public void getKonsultationsdatenAsync(string dialogId, suchFilter selektionsKriterien, string selektionsart, string sortierung, object userState) {
            if ((this.getKonsultationsdatenOperationCompleted == null)) {
                this.getKonsultationsdatenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetKonsultationsdatenOperationCompleted);
            }
            this.InvokeAsync("getKonsultationsdaten", new object[] {
                        dialogId,
                        selektionsKriterien,
                        selektionsart,
                        sortierung}, this.getKonsultationsdatenOperationCompleted, userState);
        }
        
        private void OngetKonsultationsdatenOperationCompleted(object arg) {
            if ((this.getKonsultationsdatenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getKonsultationsdatenCompleted(this, new getKonsultationsdatenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public konsultationdatenAnfrage[] getKonsultationsdatenAnfragen(string dialogId, bool onlyReady, [System.Xml.Serialization.XmlIgnoreAttribute()] bool onlyReadySpecified) {
            object[] results = this.Invoke("getKonsultationsdatenAnfragen", new object[] {
                        dialogId,
                        onlyReady,
                        onlyReadySpecified});
            return ((konsultationdatenAnfrage[])(results[0]));
        }
        
        /// <remarks/>
        public void getKonsultationsdatenAnfragenAsync(string dialogId, bool onlyReady, bool onlyReadySpecified) {
            this.getKonsultationsdatenAnfragenAsync(dialogId, onlyReady, onlyReadySpecified, null);
        }
        
        /// <remarks/>
        public void getKonsultationsdatenAnfragenAsync(string dialogId, bool onlyReady, bool onlyReadySpecified, object userState) {
            if ((this.getKonsultationsdatenAnfragenOperationCompleted == null)) {
                this.getKonsultationsdatenAnfragenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetKonsultationsdatenAnfragenOperationCompleted);
            }
            this.InvokeAsync("getKonsultationsdatenAnfragen", new object[] {
                        dialogId,
                        onlyReady,
                        onlyReadySpecified}, this.getKonsultationsdatenAnfragenOperationCompleted, userState);
        }
        
        private void OngetKonsultationsdatenAnfragenOperationCompleted(object arg) {
            if ((this.getKonsultationsdatenAnfragenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getKonsultationsdatenAnfragenCompleted(this, new getKonsultationsdatenAnfragenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public limit[] getLimit(string dialogId, int zeitraum, [System.Xml.Serialization.XmlIgnoreAttribute()] bool zeitraumSpecified) {
            object[] results = this.Invoke("getLimit", new object[] {
                        dialogId,
                        zeitraum,
                        zeitraumSpecified});
            return ((limit[])(results[0]));
        }
        
        /// <remarks/>
        public void getLimitAsync(string dialogId, int zeitraum, bool zeitraumSpecified) {
            this.getLimitAsync(dialogId, zeitraum, zeitraumSpecified, null);
        }
        
        /// <remarks/>
        public void getLimitAsync(string dialogId, int zeitraum, bool zeitraumSpecified, object userState) {
            if ((this.getLimitOperationCompleted == null)) {
                this.getLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLimitOperationCompleted);
            }
            this.InvokeAsync("getLimit", new object[] {
                        dialogId,
                        zeitraum,
                        zeitraumSpecified}, this.getLimitOperationCompleted, userState);
        }
        
        private void OngetLimitOperationCompleted(object arg) {
            if ((this.getLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLimitCompleted(this, new getLimitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getNumberOfflineKonsultationen(string dialogId, out long @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("getNumberOfflineKonsultationen", new object[] {
                        dialogId});
            @return = ((long)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void getNumberOfflineKonsultationenAsync(string dialogId) {
            this.getNumberOfflineKonsultationenAsync(dialogId, null);
        }
        
        /// <remarks/>
        public void getNumberOfflineKonsultationenAsync(string dialogId, object userState) {
            if ((this.getNumberOfflineKonsultationenOperationCompleted == null)) {
                this.getNumberOfflineKonsultationenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNumberOfflineKonsultationenOperationCompleted);
            }
            this.InvokeAsync("getNumberOfflineKonsultationen", new object[] {
                        dialogId}, this.getNumberOfflineKonsultationenOperationCompleted, userState);
        }
        
        private void OngetNumberOfflineKonsultationenOperationCompleted(object arg) {
            if ((this.getNumberOfflineKonsultationenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNumberOfflineKonsultationenCompleted(this, new getNumberOfflineKonsultationenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getNumberOfflineNachsignaturen(string dialogId, out long @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("getNumberOfflineNachsignaturen", new object[] {
                        dialogId});
            @return = ((long)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void getNumberOfflineNachsignaturenAsync(string dialogId) {
            this.getNumberOfflineNachsignaturenAsync(dialogId, null);
        }
        
        /// <remarks/>
        public void getNumberOfflineNachsignaturenAsync(string dialogId, object userState) {
            if ((this.getNumberOfflineNachsignaturenOperationCompleted == null)) {
                this.getNumberOfflineNachsignaturenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNumberOfflineNachsignaturenOperationCompleted);
            }
            this.InvokeAsync("getNumberOfflineNachsignaturen", new object[] {
                        dialogId}, this.getNumberOfflineNachsignaturenOperationCompleted, userState);
        }
        
        private void OngetNumberOfflineNachsignaturenOperationCompleted(object arg) {
            if ((this.getNumberOfflineNachsignaturenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNumberOfflineNachsignaturenCompleted(this, new getNumberOfflineNachsignaturenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public offlineRecord[] getOfflineRecords(string dialogId) {
            object[] results = this.Invoke("getOfflineRecords", new object[] {
                        dialogId});
            return ((offlineRecord[])(results[0]));
        }
        
        /// <remarks/>
        public void getOfflineRecordsAsync(string dialogId) {
            this.getOfflineRecordsAsync(dialogId, null);
        }
        
        /// <remarks/>
        public void getOfflineRecordsAsync(string dialogId, object userState) {
            if ((this.getOfflineRecordsOperationCompleted == null)) {
                this.getOfflineRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOfflineRecordsOperationCompleted);
            }
            this.InvokeAsync("getOfflineRecords", new object[] {
                        dialogId}, this.getOfflineRecordsOperationCompleted, userState);
        }
        
        private void OngetOfflineRecordsOperationCompleted(object arg) {
            if ((this.getOfflineRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOfflineRecordsCompleted(this, new getOfflineRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public konsultationsBeleg[] nachsignierenKonsultationen(string dialogId, string cin, bool forceExecution, [System.Xml.Serialization.XmlIgnoreAttribute()] bool forceExecutionSpecified, string cardReaderId) {
            object[] results = this.Invoke("nachsignierenKonsultationen", new object[] {
                        dialogId,
                        cin,
                        forceExecution,
                        forceExecutionSpecified,
                        cardReaderId});
            return ((konsultationsBeleg[])(results[0]));
        }
        
        /// <remarks/>
        public void nachsignierenKonsultationenAsync(string dialogId, string cin, bool forceExecution, bool forceExecutionSpecified, string cardReaderId) {
            this.nachsignierenKonsultationenAsync(dialogId, cin, forceExecution, forceExecutionSpecified, cardReaderId, null);
        }
        
        /// <remarks/>
        public void nachsignierenKonsultationenAsync(string dialogId, string cin, bool forceExecution, bool forceExecutionSpecified, string cardReaderId, object userState) {
            if ((this.nachsignierenKonsultationenOperationCompleted == null)) {
                this.nachsignierenKonsultationenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnachsignierenKonsultationenOperationCompleted);
            }
            this.InvokeAsync("nachsignierenKonsultationen", new object[] {
                        dialogId,
                        cin,
                        forceExecution,
                        forceExecutionSpecified,
                        cardReaderId}, this.nachsignierenKonsultationenOperationCompleted, userState);
        }
        
        private void OnnachsignierenKonsultationenOperationCompleted(object arg) {
            if ((this.nachsignierenKonsultationenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.nachsignierenKonsultationenCompleted(this, new nachsignierenKonsultationenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public offlineRecord nachsignierenKonsultationenOffline(string dialogId, string cin, bool forceExecution, [System.Xml.Serialization.XmlIgnoreAttribute()] bool forceExecutionSpecified, string cardReaderId) {
            object[] results = this.Invoke("nachsignierenKonsultationenOffline", new object[] {
                        dialogId,
                        cin,
                        forceExecution,
                        forceExecutionSpecified,
                        cardReaderId});
            return ((offlineRecord)(results[0]));
        }
        
        /// <remarks/>
        public void nachsignierenKonsultationenOfflineAsync(string dialogId, string cin, bool forceExecution, bool forceExecutionSpecified, string cardReaderId) {
            this.nachsignierenKonsultationenOfflineAsync(dialogId, cin, forceExecution, forceExecutionSpecified, cardReaderId, null);
        }
        
        /// <remarks/>
        public void nachsignierenKonsultationenOfflineAsync(string dialogId, string cin, bool forceExecution, bool forceExecutionSpecified, string cardReaderId, object userState) {
            if ((this.nachsignierenKonsultationenOfflineOperationCompleted == null)) {
                this.nachsignierenKonsultationenOfflineOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnachsignierenKonsultationenOfflineOperationCompleted);
            }
            this.InvokeAsync("nachsignierenKonsultationenOffline", new object[] {
                        dialogId,
                        cin,
                        forceExecution,
                        forceExecutionSpecified,
                        cardReaderId}, this.nachsignierenKonsultationenOfflineOperationCompleted, userState);
        }
        
        private void OnnachsignierenKonsultationenOfflineOperationCompleted(object arg) {
            if ((this.nachsignierenKonsultationenOfflineCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.nachsignierenKonsultationenOfflineCompleted(this, new nachsignierenKonsultationenOfflineCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public string sendKonsultationsdatenAnfrage(string dialogId, suchFilter selektionsKriterien) {
            object[] results = this.Invoke("sendKonsultationsdatenAnfrage", new object[] {
                        dialogId,
                        selektionsKriterien});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendKonsultationsdatenAnfrageAsync(string dialogId, suchFilter selektionsKriterien) {
            this.sendKonsultationsdatenAnfrageAsync(dialogId, selektionsKriterien, null);
        }
        
        /// <remarks/>
        public void sendKonsultationsdatenAnfrageAsync(string dialogId, suchFilter selektionsKriterien, object userState) {
            if ((this.sendKonsultationsdatenAnfrageOperationCompleted == null)) {
                this.sendKonsultationsdatenAnfrageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendKonsultationsdatenAnfrageOperationCompleted);
            }
            this.InvokeAsync("sendKonsultationsdatenAnfrage", new object[] {
                        dialogId,
                        selektionsKriterien}, this.sendKonsultationsdatenAnfrageOperationCompleted, userState);
        }
        
        private void OnsendKonsultationsdatenAnfrageOperationCompleted(object arg) {
            if ((this.sendKonsultationsdatenAnfrageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendKonsultationsdatenAnfrageCompleted(this, new sendKonsultationsdatenAnfrageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public ergebnisKonsultation sendOfflineKonsultation(string dialogId, string offlineId, string fachgebietsCode, string behandlungsfallCode, string svtCode, string anspruchId) {
            object[] results = this.Invoke("sendOfflineKonsultation", new object[] {
                        dialogId,
                        offlineId,
                        fachgebietsCode,
                        behandlungsfallCode,
                        svtCode,
                        anspruchId});
            return ((ergebnisKonsultation)(results[0]));
        }
        
        /// <remarks/>
        public void sendOfflineKonsultationAsync(string dialogId, string offlineId, string fachgebietsCode, string behandlungsfallCode, string svtCode, string anspruchId) {
            this.sendOfflineKonsultationAsync(dialogId, offlineId, fachgebietsCode, behandlungsfallCode, svtCode, anspruchId, null);
        }
        
        /// <remarks/>
        public void sendOfflineKonsultationAsync(string dialogId, string offlineId, string fachgebietsCode, string behandlungsfallCode, string svtCode, string anspruchId, object userState) {
            if ((this.sendOfflineKonsultationOperationCompleted == null)) {
                this.sendOfflineKonsultationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendOfflineKonsultationOperationCompleted);
            }
            this.InvokeAsync("sendOfflineKonsultation", new object[] {
                        dialogId,
                        offlineId,
                        fachgebietsCode,
                        behandlungsfallCode,
                        svtCode,
                        anspruchId}, this.sendOfflineKonsultationOperationCompleted, userState);
        }
        
        private void OnsendOfflineKonsultationOperationCompleted(object arg) {
            if ((this.sendOfflineKonsultationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendOfflineKonsultationCompleted(this, new sendOfflineKonsultationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public konsultationsBeleg[] sendOfflineNachsignatur(string dialogId, string offlineId) {
            object[] results = this.Invoke("sendOfflineNachsignatur", new object[] {
                        dialogId,
                        offlineId});
            return ((konsultationsBeleg[])(results[0]));
        }
        
        /// <remarks/>
        public void sendOfflineNachsignaturAsync(string dialogId, string offlineId) {
            this.sendOfflineNachsignaturAsync(dialogId, offlineId, null);
        }
        
        /// <remarks/>
        public void sendOfflineNachsignaturAsync(string dialogId, string offlineId, object userState) {
            if ((this.sendOfflineNachsignaturOperationCompleted == null)) {
                this.sendOfflineNachsignaturOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendOfflineNachsignaturOperationCompleted);
            }
            this.InvokeAsync("sendOfflineNachsignatur", new object[] {
                        dialogId,
                        offlineId}, this.sendOfflineNachsignaturOperationCompleted, userState);
        }
        
        private void OnsendOfflineNachsignaturOperationCompleted(object arg) {
            if ((this.sendOfflineNachsignaturCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendOfflineNachsignaturCompleted(this, new sendOfflineNachsignaturCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void sendZusatzinformationsAntwort(string dialogId, long zusatzinformationsAntwortId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool zusatzinformationsAntwortIdSpecified, int zusatzinformationsAntwort, [System.Xml.Serialization.XmlIgnoreAttribute()] bool zusatzinformationsAntwortSpecified) {
            this.Invoke("sendZusatzinformationsAntwort", new object[] {
                        dialogId,
                        zusatzinformationsAntwortId,
                        zusatzinformationsAntwortIdSpecified,
                        zusatzinformationsAntwort,
                        zusatzinformationsAntwortSpecified});
        }
        
        /// <remarks/>
        public void sendZusatzinformationsAntwortAsync(string dialogId, long zusatzinformationsAntwortId, bool zusatzinformationsAntwortIdSpecified, int zusatzinformationsAntwort, bool zusatzinformationsAntwortSpecified) {
            this.sendZusatzinformationsAntwortAsync(dialogId, zusatzinformationsAntwortId, zusatzinformationsAntwortIdSpecified, zusatzinformationsAntwort, zusatzinformationsAntwortSpecified, null);
        }
        
        /// <remarks/>
        public void sendZusatzinformationsAntwortAsync(string dialogId, long zusatzinformationsAntwortId, bool zusatzinformationsAntwortIdSpecified, int zusatzinformationsAntwort, bool zusatzinformationsAntwortSpecified, object userState) {
            if ((this.sendZusatzinformationsAntwortOperationCompleted == null)) {
                this.sendZusatzinformationsAntwortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendZusatzinformationsAntwortOperationCompleted);
            }
            this.InvokeAsync("sendZusatzinformationsAntwort", new object[] {
                        dialogId,
                        zusatzinformationsAntwortId,
                        zusatzinformationsAntwortIdSpecified,
                        zusatzinformationsAntwort,
                        zusatzinformationsAntwortSpecified}, this.sendZusatzinformationsAntwortOperationCompleted, userState);
        }
        
        private void OnsendZusatzinformationsAntwortOperationCompleted(object arg) {
            if ((this.sendZusatzinformationsAntwortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendZusatzinformationsAntwortCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public konsultationsBeleg stornierenKonsultation(string dialogId, long konsId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool konsIdSpecified, int konsVersion, [System.Xml.Serialization.XmlIgnoreAttribute()] bool konsVersionSpecified) {
            object[] results = this.Invoke("stornierenKonsultation", new object[] {
                        dialogId,
                        konsId,
                        konsIdSpecified,
                        konsVersion,
                        konsVersionSpecified});
            return ((konsultationsBeleg)(results[0]));
        }
        
        /// <remarks/>
        public void stornierenKonsultationAsync(string dialogId, long konsId, bool konsIdSpecified, int konsVersion, bool konsVersionSpecified) {
            this.stornierenKonsultationAsync(dialogId, konsId, konsIdSpecified, konsVersion, konsVersionSpecified, null);
        }
        
        /// <remarks/>
        public void stornierenKonsultationAsync(string dialogId, long konsId, bool konsIdSpecified, int konsVersion, bool konsVersionSpecified, object userState) {
            if ((this.stornierenKonsultationOperationCompleted == null)) {
                this.stornierenKonsultationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstornierenKonsultationOperationCompleted);
            }
            this.InvokeAsync("stornierenKonsultation", new object[] {
                        dialogId,
                        konsId,
                        konsIdSpecified,
                        konsVersion,
                        konsVersionSpecified}, this.stornierenKonsultationOperationCompleted, userState);
        }
        
        private void OnstornierenKonsultationOperationCompleted(object arg) {
            if ((this.stornierenKonsultationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.stornierenKonsultationCompleted(this, new stornierenKonsultationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://soap.kse.client.chipkarte.at", ResponseNamespace="http://soap.kse.client.chipkarte.at", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public ergebnisKonsultation wiederinkraftsetzenKonsultation(string dialogId, long konsId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool konsIdSpecified, int konsVersion, [System.Xml.Serialization.XmlIgnoreAttribute()] bool konsVersionSpecified) {
            object[] results = this.Invoke("wiederinkraftsetzenKonsultation", new object[] {
                        dialogId,
                        konsId,
                        konsIdSpecified,
                        konsVersion,
                        konsVersionSpecified});
            return ((ergebnisKonsultation)(results[0]));
        }
        
        /// <remarks/>
        public void wiederinkraftsetzenKonsultationAsync(string dialogId, long konsId, bool konsIdSpecified, int konsVersion, bool konsVersionSpecified) {
            this.wiederinkraftsetzenKonsultationAsync(dialogId, konsId, konsIdSpecified, konsVersion, konsVersionSpecified, null);
        }
        
        /// <remarks/>
        public void wiederinkraftsetzenKonsultationAsync(string dialogId, long konsId, bool konsIdSpecified, int konsVersion, bool konsVersionSpecified, object userState) {
            if ((this.wiederinkraftsetzenKonsultationOperationCompleted == null)) {
                this.wiederinkraftsetzenKonsultationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwiederinkraftsetzenKonsultationOperationCompleted);
            }
            this.InvokeAsync("wiederinkraftsetzenKonsultation", new object[] {
                        dialogId,
                        konsId,
                        konsIdSpecified,
                        konsVersion,
                        konsVersionSpecified}, this.wiederinkraftsetzenKonsultationOperationCompleted, userState);
        }
        
        private void OnwiederinkraftsetzenKonsultationOperationCompleted(object arg) {
            if ((this.wiederinkraftsetzenKonsultationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wiederinkraftsetzenKonsultationCompleted(this, new wiederinkraftsetzenKonsultationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class erstkonsultationsdaten {
        
        private string svNummerField;
        
        private string svNummerAbgeleitetField;
        
        private string anspruchIdField;
        
        private string abgeleitetNachnameField;
        
        private string abgeleitetVornameField;
        
        private string abgeleitetDruckNachnameField;
        
        private string abgeleitetDruckVornameField;
        
        private string svtCodeField;
        
        private string fachgebietsCodeField;
        
        private string behandlungsfallCodeField;
        
        private string behandlungsDatumField;
        
        private string konsultationsartCodeField;
        
        /// <remarks/>
        public string svNummer {
            get {
                return this.svNummerField;
            }
            set {
                this.svNummerField = value;
            }
        }
        
        /// <remarks/>
        public string svNummerAbgeleitet {
            get {
                return this.svNummerAbgeleitetField;
            }
            set {
                this.svNummerAbgeleitetField = value;
            }
        }
        
        /// <remarks/>
        public string anspruchId {
            get {
                return this.anspruchIdField;
            }
            set {
                this.anspruchIdField = value;
            }
        }
        
        /// <remarks/>
        public string abgeleitetNachname {
            get {
                return this.abgeleitetNachnameField;
            }
            set {
                this.abgeleitetNachnameField = value;
            }
        }
        
        /// <remarks/>
        public string abgeleitetVorname {
            get {
                return this.abgeleitetVornameField;
            }
            set {
                this.abgeleitetVornameField = value;
            }
        }
        
        /// <remarks/>
        public string abgeleitetDruckNachname {
            get {
                return this.abgeleitetDruckNachnameField;
            }
            set {
                this.abgeleitetDruckNachnameField = value;
            }
        }
        
        /// <remarks/>
        public string abgeleitetDruckVorname {
            get {
                return this.abgeleitetDruckVornameField;
            }
            set {
                this.abgeleitetDruckVornameField = value;
            }
        }
        
        /// <remarks/>
        public string svtCode {
            get {
                return this.svtCodeField;
            }
            set {
                this.svtCodeField = value;
            }
        }
        
        /// <remarks/>
        public string fachgebietsCode {
            get {
                return this.fachgebietsCodeField;
            }
            set {
                this.fachgebietsCodeField = value;
            }
        }
        
        /// <remarks/>
        public string behandlungsfallCode {
            get {
                return this.behandlungsfallCodeField;
            }
            set {
                this.behandlungsfallCodeField = value;
            }
        }
        
        /// <remarks/>
        public string behandlungsDatum {
            get {
                return this.behandlungsDatumField;
            }
            set {
                this.behandlungsDatumField = value;
            }
        }
        
        /// <remarks/>
        public string konsultationsartCode {
            get {
                return this.konsultationsartCodeField;
            }
            set {
                this.konsultationsartCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class limitValue {
        
        private string limitCodeField;
        
        private long valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        public string limitCode {
            get {
                return this.limitCodeField;
            }
            set {
                this.limitCodeField = value;
            }
        }
        
        /// <remarks/>
        public long value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool valueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class limitKonfig {
        
        private string datumBisField;
        
        private string datumVonField;
        
        private string limitCodeField;
        
        private string limitTypeField;
        
        private int limitValueField;
        
        private bool limitValueFieldSpecified;
        
        private int limitValuePercentField;
        
        private bool limitValuePercentFieldSpecified;
        
        private string valueTypeField;
        
        /// <remarks/>
        public string datumBis {
            get {
                return this.datumBisField;
            }
            set {
                this.datumBisField = value;
            }
        }
        
        /// <remarks/>
        public string datumVon {
            get {
                return this.datumVonField;
            }
            set {
                this.datumVonField = value;
            }
        }
        
        /// <remarks/>
        public string limitCode {
            get {
                return this.limitCodeField;
            }
            set {
                this.limitCodeField = value;
            }
        }
        
        /// <remarks/>
        public string limitType {
            get {
                return this.limitTypeField;
            }
            set {
                this.limitTypeField = value;
            }
        }
        
        /// <remarks/>
        public int limitValue {
            get {
                return this.limitValueField;
            }
            set {
                this.limitValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool limitValueSpecified {
            get {
                return this.limitValueFieldSpecified;
            }
            set {
                this.limitValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int limitValuePercent {
            get {
                return this.limitValuePercentField;
            }
            set {
                this.limitValuePercentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool limitValuePercentSpecified {
            get {
                return this.limitValuePercentFieldSpecified;
            }
            set {
                this.limitValuePercentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string valueType {
            get {
                return this.valueTypeField;
            }
            set {
                this.valueTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class limit {
        
        private string fachgebietsCodeField;
        
        private limitKonfig[] limitConfigField;
        
        private limitValue[] limitValueField;
        
        private string svtCodeField;
        
        /// <remarks/>
        public string fachgebietsCode {
            get {
                return this.fachgebietsCodeField;
            }
            set {
                this.fachgebietsCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("limitConfig", IsNullable=true)]
        public limitKonfig[] limitConfig {
            get {
                return this.limitConfigField;
            }
            set {
                this.limitConfigField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("limitValue", IsNullable=true)]
        public limitValue[] limitValue {
            get {
                return this.limitValueField;
            }
            set {
                this.limitValueField = value;
            }
        }
        
        /// <remarks/>
        public string svtCode {
            get {
                return this.svtCodeField;
            }
            set {
                this.svtCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class konsultationdatenAnfrage {
        
        private string anfrageIdField;
        
        private suchFilter filterField;
        
        private int statusField;
        
        private bool statusFieldSpecified;
        
        private string timestampField;
        
        /// <remarks/>
        public string anfrageId {
            get {
                return this.anfrageIdField;
            }
            set {
                this.anfrageIdField = value;
            }
        }
        
        /// <remarks/>
        public suchFilter filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool statusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class suchFilter {
        
        private string behandlungsfallCodeField;
        
        private string datumBisField;
        
        private string datumVonField;
        
        private string fachgebietsCodeField;
        
        private string konsultationsartCodeField;
        
        private string ordIdField;
        
        private string sVNummerField;
        
        private string svtCodeField;
        
        /// <remarks/>
        public string behandlungsfallCode {
            get {
                return this.behandlungsfallCodeField;
            }
            set {
                this.behandlungsfallCodeField = value;
            }
        }
        
        /// <remarks/>
        public string datumBis {
            get {
                return this.datumBisField;
            }
            set {
                this.datumBisField = value;
            }
        }
        
        /// <remarks/>
        public string datumVon {
            get {
                return this.datumVonField;
            }
            set {
                this.datumVonField = value;
            }
        }
        
        /// <remarks/>
        public string fachgebietsCode {
            get {
                return this.fachgebietsCodeField;
            }
            set {
                this.fachgebietsCodeField = value;
            }
        }
        
        /// <remarks/>
        public string konsultationsartCode {
            get {
                return this.konsultationsartCodeField;
            }
            set {
                this.konsultationsartCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ordId {
            get {
                return this.ordIdField;
            }
            set {
                this.ordIdField = value;
            }
        }
        
        /// <remarks/>
        public string SVNummer {
            get {
                return this.sVNummerField;
            }
            set {
                this.sVNummerField = value;
            }
        }
        
        /// <remarks/>
        public string svtCode {
            get {
                return this.svtCodeField;
            }
            set {
                this.svtCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class behandlungsfallZusatzProperty {
        
        private baseProperty basePropertyField;
        
        private string zusatzRechtField;
        
        /// <remarks/>
        public baseProperty baseProperty {
            get {
                return this.basePropertyField;
            }
            set {
                this.basePropertyField = value;
            }
        }
        
        /// <remarks/>
        public string zusatzRecht {
            get {
                return this.zusatzRechtField;
            }
            set {
                this.zusatzRechtField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.base.client.chipkarte.at")]
    public partial class baseProperty {
        
        private string codeField;
        
        private bool nurAnzeigeField;
        
        private bool nurAnzeigeFieldSpecified;
        
        private string textField;
        
        /// <remarks/>
        public string code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public bool nurAnzeige {
            get {
                return this.nurAnzeigeField;
            }
            set {
                this.nurAnzeigeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool nurAnzeigeSpecified {
            get {
                return this.nurAnzeigeFieldSpecified;
            }
            set {
                this.nurAnzeigeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class offlineKonsultation {
        
        private string behandlungsDatumField;
        
        private string behandlunsfallCodeField;
        
        private string fachgebietsCodeField;
        
        private string konsultationsartCodeField;
        
        private string svtCodeField;
        
        /// <remarks/>
        public string behandlungsDatum {
            get {
                return this.behandlungsDatumField;
            }
            set {
                this.behandlungsDatumField = value;
            }
        }
        
        /// <remarks/>
        public string behandlunsfallCode {
            get {
                return this.behandlunsfallCodeField;
            }
            set {
                this.behandlunsfallCodeField = value;
            }
        }
        
        /// <remarks/>
        public string fachgebietsCode {
            get {
                return this.fachgebietsCodeField;
            }
            set {
                this.fachgebietsCodeField = value;
            }
        }
        
        /// <remarks/>
        public string konsultationsartCode {
            get {
                return this.konsultationsartCodeField;
            }
            set {
                this.konsultationsartCodeField = value;
            }
        }
        
        /// <remarks/>
        public string svtCode {
            get {
                return this.svtCodeField;
            }
            set {
                this.svtCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class offlineRecord {
        
        private string erstellungsDatumField;
        
        private string idField;
        
        private string nachnameField;
        
        private string offlineFristField;
        
        private offlineKonsultation offlineKonsultationField;
        
        private string svNummerField;
        
        private int typeField;
        
        private bool typeFieldSpecified;
        
        private string vornameField;
        
        /// <remarks/>
        public string erstellungsDatum {
            get {
                return this.erstellungsDatumField;
            }
            set {
                this.erstellungsDatumField = value;
            }
        }
        
        /// <remarks/>
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string nachname {
            get {
                return this.nachnameField;
            }
            set {
                this.nachnameField = value;
            }
        }
        
        /// <remarks/>
        public string offlineFrist {
            get {
                return this.offlineFristField;
            }
            set {
                this.offlineFristField = value;
            }
        }
        
        /// <remarks/>
        public offlineKonsultation offlineKonsultation {
            get {
                return this.offlineKonsultationField;
            }
            set {
                this.offlineKonsultationField = value;
            }
        }
        
        /// <remarks/>
        public string svNummer {
            get {
                return this.svNummerField;
            }
            set {
                this.svNummerField = value;
            }
        }
        
        /// <remarks/>
        public int type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool typeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string vorname {
            get {
                return this.vornameField;
            }
            set {
                this.vornameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class zusatzinformation {
        
        private int antwortAnzeigeBedingungField;
        
        private bool antwortAnzeigeBedingungFieldSpecified;
        
        private string svtCodeField;
        
        private long zusatzinformationsAntwortIdField;
        
        private bool zusatzinformationsAntwortIdFieldSpecified;
        
        private string zusatzinformationsTextField;
        
        /// <remarks/>
        public int antwortAnzeigeBedingung {
            get {
                return this.antwortAnzeigeBedingungField;
            }
            set {
                this.antwortAnzeigeBedingungField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool antwortAnzeigeBedingungSpecified {
            get {
                return this.antwortAnzeigeBedingungFieldSpecified;
            }
            set {
                this.antwortAnzeigeBedingungFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string svtCode {
            get {
                return this.svtCodeField;
            }
            set {
                this.svtCodeField = value;
            }
        }
        
        /// <remarks/>
        public long zusatzinformationsAntwortId {
            get {
                return this.zusatzinformationsAntwortIdField;
            }
            set {
                this.zusatzinformationsAntwortIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool zusatzinformationsAntwortIdSpecified {
            get {
                return this.zusatzinformationsAntwortIdFieldSpecified;
            }
            set {
                this.zusatzinformationsAntwortIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string zusatzinformationsText {
            get {
                return this.zusatzinformationsTextField;
            }
            set {
                this.zusatzinformationsTextField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.base.client.chipkarte.at")]
    public partial class svPersonV2 {
        
        private string druckNachnameField;
        
        private string druckTitelHintenField;
        
        private string druckTitelVorneField;
        
        private string druckVornameField;
        
        private string geburtsdatumField;
        
        private string geschlechtField;
        
        private string nachnameField;
        
        private string svNummerField;
        
        private string titelHintenField;
        
        private string titelVorneField;
        
        private string vornameField;
        
        /// <remarks/>
        public string druckNachname {
            get {
                return this.druckNachnameField;
            }
            set {
                this.druckNachnameField = value;
            }
        }
        
        /// <remarks/>
        public string druckTitelHinten {
            get {
                return this.druckTitelHintenField;
            }
            set {
                this.druckTitelHintenField = value;
            }
        }
        
        /// <remarks/>
        public string druckTitelVorne {
            get {
                return this.druckTitelVorneField;
            }
            set {
                this.druckTitelVorneField = value;
            }
        }
        
        /// <remarks/>
        public string druckVorname {
            get {
                return this.druckVornameField;
            }
            set {
                this.druckVornameField = value;
            }
        }
        
        /// <remarks/>
        public string geburtsdatum {
            get {
                return this.geburtsdatumField;
            }
            set {
                this.geburtsdatumField = value;
            }
        }
        
        /// <remarks/>
        public string geschlecht {
            get {
                return this.geschlechtField;
            }
            set {
                this.geschlechtField = value;
            }
        }
        
        /// <remarks/>
        public string nachname {
            get {
                return this.nachnameField;
            }
            set {
                this.nachnameField = value;
            }
        }
        
        /// <remarks/>
        public string svNummer {
            get {
                return this.svNummerField;
            }
            set {
                this.svNummerField = value;
            }
        }
        
        /// <remarks/>
        public string titelHinten {
            get {
                return this.titelHintenField;
            }
            set {
                this.titelHintenField = value;
            }
        }
        
        /// <remarks/>
        public string titelVorne {
            get {
                return this.titelVorneField;
            }
            set {
                this.titelVorneField = value;
            }
        }
        
        /// <remarks/>
        public string vorname {
            get {
                return this.vornameField;
            }
            set {
                this.vornameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class konsultationsdaten {
        
        private svPersonV2 angehoerigenDatenField;
        
        private konsultationsBeleg konsultationsBelegField;
        
        private svPersonV2 versichertenDatenField;
        
        /// <remarks/>
        public svPersonV2 angehoerigenDaten {
            get {
                return this.angehoerigenDatenField;
            }
            set {
                this.angehoerigenDatenField = value;
            }
        }
        
        /// <remarks/>
        public konsultationsBeleg konsultationsBeleg {
            get {
                return this.konsultationsBelegField;
            }
            set {
                this.konsultationsBelegField = value;
            }
        }
        
        /// <remarks/>
        public svPersonV2 versichertenDaten {
            get {
                return this.versichertenDatenField;
            }
            set {
                this.versichertenDatenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class konsultationsBeleg {
        
        private string abrechnungsPeriodeField;
        
        private string abstimmungsBelegField;
        
        private string anspruchsartField;
        
        private string bearbeitungsDatumField;
        
        private string bearbeitungsDatumClientSignaturField;
        
        private string behandlungsDatumField;
        
        private string behandlungsfallCodeField;
        
        private int belegInhaltVersionField;
        
        private bool belegInhaltVersionFieldSpecified;
        
        private string bezugsBereichField;
        
        private string bundeslandCodeField;
        
        private byte[] clientSignaturField;
        
        private string fachgebietsCodeField;
        
        private long idField;
        
        private bool idFieldSpecified;
        
        private string konsultationsartCodeField;
        
        private bool kostenanteilbefreitField;
        
        private bool kostenanteilbefreitFieldSpecified;
        
        private string leistungsSvtCodeField;
        
        private string leistungsrechtlichesLimitGeprueftField;
        
        private int ordNummerField;
        
        private bool ordNummerFieldSpecified;
        
        private string originalSvtCodeField;
        
        private bool overLimitField;
        
        private bool overLimitFieldSpecified;
        
        private bool rezeptgebbefreitField;
        
        private bool rezeptgebbefreitFieldSpecified;
        
        private byte[] serverSignaturField;
        
        private string signaturFormatClientField;
        
        private string signaturFormatServerField;
        
        private string statusField;
        
        private string svNummerField;
        
        private string svNummerAbgeleitetField;
        
        private long txnNummerField;
        
        private bool txnNummerFieldSpecified;
        
        private string verrechnungsSvtCodeField;
        
        private string versichertenKategorieField;
        
        private string versichertenartCodeField;
        
        private int versionField;
        
        private bool versionFieldSpecified;
        
        private string vpNummerField;
        
        /// <remarks/>
        public string abrechnungsPeriode {
            get {
                return this.abrechnungsPeriodeField;
            }
            set {
                this.abrechnungsPeriodeField = value;
            }
        }
        
        /// <remarks/>
        public string abstimmungsBeleg {
            get {
                return this.abstimmungsBelegField;
            }
            set {
                this.abstimmungsBelegField = value;
            }
        }
        
        /// <remarks/>
        public string anspruchsart {
            get {
                return this.anspruchsartField;
            }
            set {
                this.anspruchsartField = value;
            }
        }
        
        /// <remarks/>
        public string bearbeitungsDatum {
            get {
                return this.bearbeitungsDatumField;
            }
            set {
                this.bearbeitungsDatumField = value;
            }
        }
        
        /// <remarks/>
        public string bearbeitungsDatumClientSignatur {
            get {
                return this.bearbeitungsDatumClientSignaturField;
            }
            set {
                this.bearbeitungsDatumClientSignaturField = value;
            }
        }
        
        /// <remarks/>
        public string behandlungsDatum {
            get {
                return this.behandlungsDatumField;
            }
            set {
                this.behandlungsDatumField = value;
            }
        }
        
        /// <remarks/>
        public string behandlungsfallCode {
            get {
                return this.behandlungsfallCodeField;
            }
            set {
                this.behandlungsfallCodeField = value;
            }
        }
        
        /// <remarks/>
        public int belegInhaltVersion {
            get {
                return this.belegInhaltVersionField;
            }
            set {
                this.belegInhaltVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool belegInhaltVersionSpecified {
            get {
                return this.belegInhaltVersionFieldSpecified;
            }
            set {
                this.belegInhaltVersionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string bezugsBereich {
            get {
                return this.bezugsBereichField;
            }
            set {
                this.bezugsBereichField = value;
            }
        }
        
        /// <remarks/>
        public string bundeslandCode {
            get {
                return this.bundeslandCodeField;
            }
            set {
                this.bundeslandCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] clientSignatur {
            get {
                return this.clientSignaturField;
            }
            set {
                this.clientSignaturField = value;
            }
        }
        
        /// <remarks/>
        public string fachgebietsCode {
            get {
                return this.fachgebietsCodeField;
            }
            set {
                this.fachgebietsCodeField = value;
            }
        }
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool idSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string konsultationsartCode {
            get {
                return this.konsultationsartCodeField;
            }
            set {
                this.konsultationsartCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool kostenanteilbefreit {
            get {
                return this.kostenanteilbefreitField;
            }
            set {
                this.kostenanteilbefreitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool kostenanteilbefreitSpecified {
            get {
                return this.kostenanteilbefreitFieldSpecified;
            }
            set {
                this.kostenanteilbefreitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string leistungsSvtCode {
            get {
                return this.leistungsSvtCodeField;
            }
            set {
                this.leistungsSvtCodeField = value;
            }
        }
        
        /// <remarks/>
        public string leistungsrechtlichesLimitGeprueft {
            get {
                return this.leistungsrechtlichesLimitGeprueftField;
            }
            set {
                this.leistungsrechtlichesLimitGeprueftField = value;
            }
        }
        
        /// <remarks/>
        public int ordNummer {
            get {
                return this.ordNummerField;
            }
            set {
                this.ordNummerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ordNummerSpecified {
            get {
                return this.ordNummerFieldSpecified;
            }
            set {
                this.ordNummerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string originalSvtCode {
            get {
                return this.originalSvtCodeField;
            }
            set {
                this.originalSvtCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool overLimit {
            get {
                return this.overLimitField;
            }
            set {
                this.overLimitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool overLimitSpecified {
            get {
                return this.overLimitFieldSpecified;
            }
            set {
                this.overLimitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool rezeptgebbefreit {
            get {
                return this.rezeptgebbefreitField;
            }
            set {
                this.rezeptgebbefreitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rezeptgebbefreitSpecified {
            get {
                return this.rezeptgebbefreitFieldSpecified;
            }
            set {
                this.rezeptgebbefreitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] serverSignatur {
            get {
                return this.serverSignaturField;
            }
            set {
                this.serverSignaturField = value;
            }
        }
        
        /// <remarks/>
        public string signaturFormatClient {
            get {
                return this.signaturFormatClientField;
            }
            set {
                this.signaturFormatClientField = value;
            }
        }
        
        /// <remarks/>
        public string signaturFormatServer {
            get {
                return this.signaturFormatServerField;
            }
            set {
                this.signaturFormatServerField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string svNummer {
            get {
                return this.svNummerField;
            }
            set {
                this.svNummerField = value;
            }
        }
        
        /// <remarks/>
        public string svNummerAbgeleitet {
            get {
                return this.svNummerAbgeleitetField;
            }
            set {
                this.svNummerAbgeleitetField = value;
            }
        }
        
        /// <remarks/>
        public long txnNummer {
            get {
                return this.txnNummerField;
            }
            set {
                this.txnNummerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool txnNummerSpecified {
            get {
                return this.txnNummerFieldSpecified;
            }
            set {
                this.txnNummerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string verrechnungsSvtCode {
            get {
                return this.verrechnungsSvtCodeField;
            }
            set {
                this.verrechnungsSvtCodeField = value;
            }
        }
        
        /// <remarks/>
        public string versichertenKategorie {
            get {
                return this.versichertenKategorieField;
            }
            set {
                this.versichertenKategorieField = value;
            }
        }
        
        /// <remarks/>
        public string versichertenartCode {
            get {
                return this.versichertenartCodeField;
            }
            set {
                this.versichertenartCodeField = value;
            }
        }
        
        /// <remarks/>
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool versionSpecified {
            get {
                return this.versionFieldSpecified;
            }
            set {
                this.versionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string vpNummer {
            get {
                return this.vpNummerField;
            }
            set {
                this.vpNummerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.kse.client.chipkarte.at")]
    public partial class ergebnisKonsultation {
        
        private konsultationsdaten konsultationsDatenField;
        
        private System.Nullable<int>[] kseMessageCodesField;
        
        private konsultationsBeleg[] nachsignKonsultationenField;
        
        private zusatzinformation zusatzinformationField;
        
        /// <remarks/>
        public konsultationsdaten konsultationsDaten {
            get {
                return this.konsultationsDatenField;
            }
            set {
                this.konsultationsDatenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("kseMessageCodes", IsNullable=true)]
        public System.Nullable<int>[] kseMessageCodes {
            get {
                return this.kseMessageCodesField;
            }
            set {
                this.kseMessageCodesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("nachsignKonsultationen", IsNullable=true)]
        public konsultationsBeleg[] nachsignKonsultationen {
            get {
                return this.nachsignKonsultationenField;
            }
            set {
                this.nachsignKonsultationenField = value;
            }
        }
        
        /// <remarks/>
        public zusatzinformation zusatzinformation {
            get {
                return this.zusatzinformationField;
            }
            set {
                this.zusatzinformationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.base.client.chipkarte.at")]
    public partial class property {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getErstkonsultationenCompletedEventHandler(object sender, getErstkonsultationenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getErstkonsultationenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getErstkonsultationenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public erstkonsultationsdaten[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((erstkonsultationsdaten[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void aendernKonsultationCompletedEventHandler(object sender, aendernKonsultationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class aendernKonsultationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal aendernKonsultationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public konsultationsBeleg Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((konsultationsBeleg)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void checkStatusCompletedEventHandler(object sender, checkStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public property[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((property[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteKonsultationsdatenAnfrageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void deleteOfflineRecordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void doKonsultationCompletedEventHandler(object sender, doKonsultationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doKonsultationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doKonsultationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ergebnisKonsultation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ergebnisKonsultation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void doKonsultationOfflineCompletedEventHandler(object sender, doKonsultationOfflineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class doKonsultationOfflineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal doKonsultationOfflineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public offlineRecord Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((offlineRecord)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void downloadKonsultationsdatenCompletedEventHandler(object sender, downloadKonsultationsdatenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class downloadKonsultationsdatenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal downloadKonsultationsdatenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public konsultationsdaten[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((konsultationsdaten[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getBehandlungsfaelleCompletedEventHandler(object sender, getBehandlungsfaelleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBehandlungsfaelleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBehandlungsfaelleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public baseProperty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((baseProperty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getBehandlungsfaelleByFachgebietCompletedEventHandler(object sender, getBehandlungsfaelleByFachgebietCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBehandlungsfaelleByFachgebietCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBehandlungsfaelleByFachgebietCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public baseProperty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((baseProperty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getBehandlungsfaelleByFachgebietZusatzCompletedEventHandler(object sender, getBehandlungsfaelleByFachgebietZusatzCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getBehandlungsfaelleByFachgebietZusatzCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getBehandlungsfaelleByFachgebietZusatzCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public behandlungsfallZusatzProperty[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((behandlungsfallZusatzProperty[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getKonsultationsdatenCompletedEventHandler(object sender, getKonsultationsdatenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getKonsultationsdatenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getKonsultationsdatenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public konsultationsdaten[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((konsultationsdaten[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getKonsultationsdatenAnfragenCompletedEventHandler(object sender, getKonsultationsdatenAnfragenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getKonsultationsdatenAnfragenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getKonsultationsdatenAnfragenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public konsultationdatenAnfrage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((konsultationdatenAnfrage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getLimitCompletedEventHandler(object sender, getLimitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public limit[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((limit[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getNumberOfflineKonsultationenCompletedEventHandler(object sender, getNumberOfflineKonsultationenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNumberOfflineKonsultationenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNumberOfflineKonsultationenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getNumberOfflineNachsignaturenCompletedEventHandler(object sender, getNumberOfflineNachsignaturenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNumberOfflineNachsignaturenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNumberOfflineNachsignaturenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void getOfflineRecordsCompletedEventHandler(object sender, getOfflineRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOfflineRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOfflineRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public offlineRecord[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((offlineRecord[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void nachsignierenKonsultationenCompletedEventHandler(object sender, nachsignierenKonsultationenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class nachsignierenKonsultationenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal nachsignierenKonsultationenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public konsultationsBeleg[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((konsultationsBeleg[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void nachsignierenKonsultationenOfflineCompletedEventHandler(object sender, nachsignierenKonsultationenOfflineCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class nachsignierenKonsultationenOfflineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal nachsignierenKonsultationenOfflineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public offlineRecord Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((offlineRecord)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void sendKonsultationsdatenAnfrageCompletedEventHandler(object sender, sendKonsultationsdatenAnfrageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendKonsultationsdatenAnfrageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendKonsultationsdatenAnfrageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void sendOfflineKonsultationCompletedEventHandler(object sender, sendOfflineKonsultationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendOfflineKonsultationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendOfflineKonsultationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ergebnisKonsultation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ergebnisKonsultation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void sendOfflineNachsignaturCompletedEventHandler(object sender, sendOfflineNachsignaturCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendOfflineNachsignaturCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendOfflineNachsignaturCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public konsultationsBeleg[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((konsultationsBeleg[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void sendZusatzinformationsAntwortCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void stornierenKonsultationCompletedEventHandler(object sender, stornierenKonsultationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class stornierenKonsultationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal stornierenKonsultationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public konsultationsBeleg Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((konsultationsBeleg)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void wiederinkraftsetzenKonsultationCompletedEventHandler(object sender, wiederinkraftsetzenKonsultationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wiederinkraftsetzenKonsultationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wiederinkraftsetzenKonsultationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ergebnisKonsultation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ergebnisKonsultation)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591